package internal_test

import (
	"testing"

	"github.com/taisei-32/TLS/internal"
)

var testData = []byte{
	0x00, 0x02, 0x76, 0x00, 0x03, 0x03, 0x58, 0x41,
	0xf2, 0xec, 0x0d, 0x6d, 0x1a, 0xe4, 0x3a, 0xba,
	0xea, 0xd4, 0x72, 0xa4, 0xa2, 0x3b, 0xda, 0xa7,
	0xc3, 0xf6, 0xb8, 0x16, 0x0a, 0x3c, 0x03, 0xc9,
	0xfe, 0x66, 0xeb, 0xaa, 0x4a, 0x49, 0x1d, 0x20,
	0x25, 0x27, 0xbc, 0xb8, 0x00, 0x65, 0x80, 0xba,
	0x17, 0x83, 0x7c, 0xf2, 0xd5, 0x16, 0x3c, 0x7b,
	0xbe, 0x8b, 0x8b, 0x4c, 0xbe, 0x7b, 0x3d, 0xa5,
	0xfb, 0xdc, 0x38, 0xe3, 0x40, 0x7d, 0x13, 0xe1,
	0x00, 0x02, 0x2e, 0x00, 0x2b, 0x00, 0x02, 0x00,
	0x04, 0x03, 0x33, 0x00, 0x24, 0x00, 0x1d, 0x00,
	0x20, 0x00, 0x53, 0x8e, 0x86, 0xca, 0x67, 0x10,
	0xdd, 0x40, 0x6c, 0x84, 0xa7, 0x08, 0xfd, 0xcc,
	0x06, 0xa6, 0x6f, 0xdf, 0xeb, 0xc0, 0x7c, 0x37,
	0x6f, 0xc8, 0xbb, 0x91, 0xe4, 0x34, 0x45, 0x7d,
	0x14, 0xa6,
}

func TestParseServerHello(t *testing.T) {
	t.Run("ServerHelloのパースが正しく行われる", func(t *testing.T) {
		sh, err := internal.ParseServerHello(testData)
		if err != nil {
			t.Fatalf("サーバーハローのパースに失敗: %v", err)
		}

		if sh.Version[0] != 0x03 || sh.Version[1] != 0x03 {
			t.Errorf("期待されるバージョンは0x0303ですが、実際のバージョンは%02x%02xです", sh.Version[0], sh.Version[1])
		}

		if len(sh.Random) != 32 {
			t.Errorf("期待されるランダム値の長さは32バイトですが、実際の長さは%dバイトです", len(sh.Random))
		}

		if len(sh.CipherSuite) == 0 {
			t.Error("CipherSuitesが空です")
		}

		if len(sh.TLSExtensions) == 0 {
			t.Error("Extensionsが空です")
		}
	})
}
