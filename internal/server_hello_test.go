package internal_test

import (
	"bytes"
	"testing"

	"github.com/taisei-32/TLS/internal"
	"github.com/taisei-32/TLS/internal/common"
)

var testData = []byte{
	0x03, 0x03, 0xfb, 0xc0, 0xae, 0x9e, 0xa5, 0xa1, 0xc2, 0x26, 0x44, 0x92,
	0x7d, 0x2b, 0xaa, 0x1d, 0x0c, 0x09, 0x13, 0xe1, 0x95, 0x50, 0xda, 0xf0, 0x95, 0x94, 0x52, 0x42,
	0xd7, 0xf0, 0xb3, 0x4a, 0xb3, 0xd8, 0x20, 0x09, 0x31, 0x57, 0x34, 0x08, 0x1d, 0x5c, 0x07, 0x49,
	0xd3, 0x46, 0x70, 0x37, 0x1d, 0xd3, 0x16, 0xa4, 0xdd, 0x0d, 0x89, 0x15, 0x7a, 0xce, 0x61, 0x0c,
	0xc7, 0x2b, 0xc5, 0xcf, 0x6e, 0x4e, 0x44, 0x13, 0x02, 0x00, 0x00, 0x2e, 0x00, 0x2b, 0x00, 0x02,
	0x03, 0x04, 0x00, 0x33, 0x00, 0x24, 0x00, 0x1d, 0x00, 0x20, 0xd4, 0xd7, 0x0a, 0x14, 0x46, 0x71,
	0x14, 0x99, 0x16, 0x68, 0xb7, 0x90, 0xd5, 0x53, 0x26, 0x3f, 0xc7, 0x95, 0x1d, 0xcd, 0x89, 0x59,
	0x36, 0xff, 0x70, 0x51, 0x11, 0xd6, 0x3c, 0x51, 0x77, 0x2f,
}

func TestParseServerHello(t *testing.T) {
	t.Run("ServerHelloのパースが正しく行われ、構造体に正しい情報が書き込まれること", func(t *testing.T) {
		sh, err := internal.ParseServerHello(testData)
		if err != nil {
			t.Fatalf(": %v", err)
		}

		if sh.Version[0] != 0x03 || sh.Version[1] != 0x03 {
			t.Errorf("期待されるバージョンは0x0303ですが、実際のバージョンは%02x%02xです", sh.Version[0], sh.Version[1])
		}

		if len(sh.Random) != 32 {
			t.Errorf("期待されるランダム値の長さは32バイトですが、実際の長さは%dバイトです", len(sh.Random))
		}

		if !bytes.Equal(sh.CipherSuite, common.TLS_AES_256_GCM_SHA384) {
			t.Errorf("期待されるCipherSuiteは %x ですが、実際は %x です", common.TLS_AES_256_GCM_SHA384, sh.CipherSuite)
		}

		if len(sh.TLSExtensions) == 0 {
			t.Error("Extensionsが空です")
		}
	})
}
